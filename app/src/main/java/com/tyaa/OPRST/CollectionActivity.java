package com.tyaa.OPRST;import android.content.Intent;import android.content.IntentFilter;import android.content.ServiceConnection;import android.graphics.Color;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.support.v4.app.Fragment;import android.support.v4.view.PagerTabStrip;import android.support.v4.view.PagerTitleStrip;import android.support.v4.view.ViewPager;import android.support.v7.app.AppCompatActivity;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.ImageButton;import com.tyaa.OPRST.Cache.Serializator;import com.tyaa.OPRST.DataService.DataReceiver;import com.tyaa.OPRST.DataService.DataService;import com.tyaa.OPRST.DataService.ProgressCallback;import com.tyaa.OPRST.TitleFragments.Advertising.AdvertisingFragment;import com.tyaa.OPRST.TitleFragments.Events.EventFragment;import com.tyaa.OPRST.TitleFragments.Projects.ProjectFragment;import com.tyaa.OPRST.TitleFragments.Superior.SuperiorFragment;import com.tyaa.OPRST.TitleFragments.Us.UsFragment;import com.tyaa.OPRST.TitlePageAdapter.ActivityCallbacks;import com.tyaa.OPRST.TitlePageAdapter.FragmentCallbacks;import com.tyaa.OPRST.TitlePageAdapter.FragmentInfo;import com.tyaa.OPRST.TitlePageAdapter.NavigationOnPageChangeListener;import com.tyaa.OPRST.TitlePageAdapter.SectionsPagerAdapter;import java.util.ArrayList;import java.util.LinkedList;/** * Created by Pavlo on 11/20/2015. */public class CollectionActivity extends AppCompatActivityimplements ActivityCallbacks, ProgressCallback {    public static final String TAG = CollectionActivity.class.getSimpleName();    public static final String EXTRA_RESULT=TAG+".extra_result";    public static final String ARG_SECTION_NUMBER = TAG+".section_number";    public static final String ARG_LEVEL_NUMBER = TAG+".level_number";    public static final String ARG_TITLE_ID = TAG+".title_id";    public static final String ARG_MESSAGE = TAG+".message";    public static final String CURRENT_PAGE = TAG+".current_page";    public final static String BROADCAST_ACTION = CollectionActivity.class.getName()+            ".service_broadcast";    public static final String TITLE_BUTTONS_VISIBILITY = TAG+".title_buttons_visibility";    public static final String SOCIAL_LINKS_VISIBILITY = TAG+".social_links_visibility";    private Button mImageButtonVkontakte;    private Button mImageButtonTwitter;    private Button mImageButtonFaceBook;    private Button mImageButtonGooglePlus;    private Handler mDataHandler;    public ErrorHandler mErrorHandler;    @Override    public void onShowLoading(Intent intent) {        String tag = intent.getStringExtra(DataReceiver.PARAM_TAG);        android.support.v4.app.FragmentManager fragmentManager=getSupportFragmentManager();        Fragment fragment=fragmentManager.findFragmentByTag(tag);        Bundle args=fragment.getArguments();        if(args!=null){           int pos= args.getInt(CollectionActivity.ARG_SECTION_NUMBER);           if(mViewPager.getCurrentItem()==pos){               mProgressView.setVisibility(View.VISIBLE);           }        }    }    @Override    public void onHideLoading() {          mProgressView.setVisibility(View.GONE);    }    private SectionsPagerAdapter mSectionsPagerAdapter;    private ViewPager mViewPager;    private PagerTitleStrip mPagerTitleStrip;    private PagerTabStrip mPagerTabStrip;    private ArrayList<Button> mButtons;    private boolean mTitleButtonsVisibility;    private boolean mSocialLinksVisibility;    private View mTitleButtonsView;    private View mShareView;    private View mProgressView;    private LinkedList<LinkedList<FragmentInfo>> mFragments = null;    private Serializator serialisator;    private int currentPage;    protected boolean bound = false;    protected ServiceConnection mConnection;    protected DataService mDataService;    protected Intent mDataIntent;    protected DataReceiver mDataReceiver;    @Override    public void onBackPressed() {        Fragment fragment=mSectionsPagerAdapter.getItem(mViewPager.getCurrentItem());        if(fragment!=null){            Bundle arg=fragment.getArguments();            if(arg!=null){                int level=arg.getInt(ARG_LEVEL_NUMBER);                if(level!=0){                    long id=arg.getLong(ARG_TITLE_ID);                    onFragmentPrev(id,null);                }else{                    moveTaskToBack(true);                }            }        }    }    @Override    public void onFragmentNext(long prev, Class<?> next, Object msg) {        mSectionsPagerAdapter.goToNext(prev, next, msg);    }    @Override    public void onFragmentPrev(long next, Object msg) {        mSectionsPagerAdapter.goToPrev(next, msg);    }    @Override    public ErrorHandler getErrorHandler() {        return mErrorHandler;    }    @Override    public void sendToFragment(Intent intent) {        String tag = intent.getStringExtra(DataReceiver.PARAM_TAG);        android.support.v4.app.FragmentManager fragmentManager=getSupportFragmentManager();        Fragment fragment=fragmentManager.findFragmentByTag(tag);        FragmentCallbacks fragmentCallbacks= (FragmentCallbacks) fragment;        if(fragmentCallbacks!=null){            fragmentCallbacks.onReceiveIntent(intent);        }    }    private void setLogoListeners(){        final ImageButton mLogoImageButton=(ImageButton) findViewById(R.id.logo);        mLogoImageButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (!mTitleButtonsVisibility) {                    mTitleButtonsView.setVisibility(View.GONE);                    mTitleButtonsVisibility = true;                } else {                    mTitleButtonsView.setVisibility(View.VISIBLE);                    mTitleButtonsVisibility = false;                }            }        });        final Button mLogoTextButton =(Button) findViewById(R.id.logo_text);        mLogoTextButton.setTextColor(Color.BLACK);        mLogoTextButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (mSocialLinksVisibility) {                    mShareView.setVisibility(View.GONE);                    mSocialLinksVisibility = false;                    mLogoTextButton.setTextColor(Color.BLACK);                } else {                    mShareView.setVisibility(View.VISIBLE);                    mSocialLinksVisibility = true;                    mLogoTextButton.setTextColor(Color.WHITE);                }            }        });    }    public SectionsPagerAdapter getSectionsPagerAdapter() {        return mSectionsPagerAdapter;    }    public ViewPager getViewPager() {        return mViewPager;    }    public void initFragments(){        mFragments =new LinkedList<>();        for(int i=0;i<5;i++){            mFragments.add(new LinkedList<FragmentInfo>());        }        FragmentInfo info=new FragmentInfo();        info.setPos(0);info.setName(SuperiorFragment.class.getName());        mFragments.get(0).add(info);        FragmentInfo info1=new FragmentInfo();        info1.setPos(1);info1.setName(ProjectFragment.class.getName());        mFragments.get(1).add(info1);        FragmentInfo info2=new FragmentInfo();        info2.setPos(2);info2.setName(AdvertisingFragment.class.getName());        mFragments.get(2).add(info2);        FragmentInfo info3=new FragmentInfo();        info3.setPos(3);info3.setName(EventFragment.class.getName());        mFragments.get(3).add(info3);        FragmentInfo info4=new FragmentInfo();        info4.setPos(4);info4.setName(UsFragment.class.getName());        mFragments.get(4).add(info4);    }    public void onFirstRun(){        initFragments();    }    @Override    public void onSaveInstanceState(Bundle savedInstanceState){        savedInstanceState.putBoolean(TITLE_BUTTONS_VISIBILITY, mTitleButtonsVisibility);        savedInstanceState.putBoolean(SOCIAL_LINKS_VISIBILITY, mSocialLinksVisibility);        savedInstanceState.putInt(CURRENT_PAGE,mViewPager.getCurrentItem());        serialisator.Serialize(mSectionsPagerAdapter.getFragments(),TAG);        super.onSaveInstanceState(savedInstanceState);    }    public void onRestoreInstanceState(Bundle savedInstanceState){        if(savedInstanceState!=null){            mTitleButtonsVisibility=savedInstanceState.getBoolean(TITLE_BUTTONS_VISIBILITY);            mSocialLinksVisibility=savedInstanceState.getBoolean(SOCIAL_LINKS_VISIBILITY);            if(mTitleButtonsVisibility){                mTitleButtonsView.setVisibility(View.GONE);            }else{                mTitleButtonsView.setVisibility(View.VISIBLE);            }            if(!mSocialLinksVisibility){                mShareView.setVisibility(View.GONE);            }else{                mShareView.setVisibility(View.VISIBLE);            }            currentPage=savedInstanceState.getInt(CURRENT_PAGE);            mFragments= (LinkedList<LinkedList<FragmentInfo>>) serialisator.Desserialize(TAG);        }else{            onFirstRun();        }    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_collection);        serialisator=new Serializator(getBaseContext());        mErrorHandler=new ErrorHandler(this);        mDataService=new DataService();        mDataReceiver=new DataReceiver();        // создаем фильтр для BroadcastReceiver        IntentFilter intentFilter= new IntentFilter(BROADCAST_ACTION);        // регистрируем (включаем) BroadcastReceiver        registerReceiver(mDataReceiver, intentFilter);        mTitleButtonsView = findViewById(R.id.title_buttons);        if (mTitleButtonsView == null) {            mTitleButtonsView = findViewById(R.id.title_buttons_landscape);        }        mShareView = findViewById(R.id.idShareButtonLayout);        mProgressView = findViewById(R.id.pbHeaderProgress);        onRestoreInstanceState(savedInstanceState);        setLogoListeners();        //Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        //setSupportActionBar(toolbar);        // Create the adapter that will return a fragment for each of the three        // primary sections of the activity.        mSectionsPagerAdapter = new SectionsPagerAdapter(this,                getSupportFragmentManager());        mSectionsPagerAdapter.setFragments(mFragments);        // Set up the ViewPager with the sections adapter.        mViewPager = (ViewPager) findViewById(R.id.page_container);        mViewPager.setAdapter(mSectionsPagerAdapter);        //mPagerTitleStrip = (PagerTitleStrip) findViewById(R.id.pager_title_strip);        //mPagerTabStrip=(PagerTabStrip) findViewById(R.id.pager_tab_strip);        NavigationOnPageChangeListener listener =                new NavigationOnPageChangeListener(this, mViewPager, mSectionsPagerAdapter);        mViewPager.clearOnPageChangeListeners();        mViewPager.addOnPageChangeListener(listener);        /*FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)                        .setAction("Action", null).show();            }        });*/        mViewPager.setCurrentItem(currentPage);        //mViewPager.setCurrentItem(1);    }    @Override    protected void onDestroy() {        super.onDestroy();        // дерегистрируем (выключаем) BroadcastReceiver        unregisterReceiver(mDataReceiver);        mDataService.onDestroy();    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }    public void onClickSocialWidget(View v){        Uri UrlButton = null;        String UrlButtonVk = "https://vk.com/oprstcomua";        String UrlButtonTw = "https://twitter.com/oprst_com_ua";        String UrlButtonFb = "https://www.facebook.com/groups/506884652659015/";        String UrlButtonGlpl = "https://plus.google.com/u/0/107806665288105597736/posts";        if(v.getId()==R.id.vkontakteButton)            UrlButton= Uri.parse(UrlButtonVk);        else if(v.getId()==R.id.twiterButton)            UrlButton= Uri.parse(UrlButtonTw);        else if(v.getId()==R.id.facebookButton)            UrlButton= Uri.parse(UrlButtonFb);        else if(v.getId()==R.id.googleplusButton)            UrlButton= Uri.parse(UrlButtonGlpl);        Intent i = new Intent(Intent.ACTION_VIEW, UrlButton);        startActivity(i);    }}